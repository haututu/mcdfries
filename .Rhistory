par(bg="blue")
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
library(BEST)
library(kableExtra)
par(bg="blue")
#Set expected weights so we can standardize to zero
japWgt <- 170
britWgt <- 150
nzWgt <- 120
#Load Japanese data and British datum subtracting weight so expected mean is 0
japData <- read.csv("japaneseData.csv")$wgt - japWgt
britData <- read.csv("britishData.csv")$wgt - britWgt
priorData <- append(japData, britData)
#Load NZ data
nzData <- read.csv("nzData.csv")$wgt - nzWgt
kable(data.frame(Weight=c(japData, britData, nzData),
Country=c(rep("Japan", length(japData)),
rep("Britain", length(britData)),
rep("New Zealand", length(nzData))
)
),
"html"
) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = FALSE)
plotAreaInROPE(rnorm(10000,0,5),
compVal=-20,
maxROPEradius = 10)
?plotAreaInROPE
plotAreaInROPE(rnorm(10000,0,5),
compVal=-20,
maxROPEradius = 10,
par(bg = 'blue'))
par(bg = 'blue')
plotAreaInROPE(rnorm(10000,0,5),
compVal=-20,
maxROPEradius = 10
)
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
library(BEST)
library(kableExtra)
#backgroundColor <-
par(bg = '#ecf0f1')
plotAreaInROPE(rnorm(10000,0,5),
compVal=-20,
maxROPEradius = 10
)
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
library(BEST)
library(kableExtra)
backgroundColor <- "#ecf0f1"
plotAreaInROPE(rnorm(10000,0,5),
compVal=-20,
maxROPEradius = 10
)
library(knitr)
library(BEST)
library(kableExtra)
opts_chunk$set(echo = TRUE)
opts_knit$set(global.par = TRUE)
par(bg = '#ecf0f1')
#Set expected weights so we can standardize to zero
japWgt <- 170
britWgt <- 150
nzWgt <- 120
#Load Japanese data and British datum subtracting weight so expected mean is 0
japData <- read.csv("japaneseData.csv")$wgt - japWgt
britData <- read.csv("britishData.csv")$wgt - britWgt
priorData <- append(japData, britData)
#Load NZ data
nzData <- read.csv("nzData.csv")$wgt - nzWgt
kable(data.frame(Weight=c(japData, britData, nzData),
Country=c(rep("Japan", length(japData)),
rep("Britain", length(britData)),
rep("New Zealand", length(nzData))
)
),
"html"
) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = FALSE)
plotAreaInROPE(rnorm(10000,0,5),
compVal=-20,
maxROPEradius = 10
)
library(knitr)
library(BEST)
library(kableExtra)
opts_chunk$set(echo = TRUE)
opts_knit$set(global.par = TRUE)
#Set expected weights so we can standardize to zero
japWgt <- 170
britWgt <- 150
nzWgt <- 120
#Load Japanese data and British datum subtracting weight so expected mean is 0
japData <- read.csv("japaneseData.csv")$wgt - japWgt
britData <- read.csv("britishData.csv")$wgt - britWgt
priorData <- append(japData, britData)
#Load NZ data
nzData <- read.csv("nzData.csv")$wgt - nzWgt
par(bg = '#ecf0f1')
plotAreaInROPE(rnorm(10000,0,5),
compVal=-20,
maxROPEradius = 10
)
plotAreaInROPE(rnorm(10000,0,5),
compVal=-20,
maxROPEradius = 10
)
plotAreaInROPE(rnorm(10000,0,5),
compVal=-20,
maxROPEradius = 10
)
help("par")
library(knitr)
library(BEST)
library(kableExtra)
opts_chunk$set(echo = TRUE)
opts_knit$set(global.par = TRUE)
#Set plot parameters
par(bg = '#ecf0f1')
#Set expected weights so we can standardize to zero
japWgt <- 170
britWgt <- 150
nzWgt <- 120
#Load Japanese data and British datum subtracting weight so expected mean is 0
japData <- read.csv("japaneseData.csv")$wgt - japWgt
britData <- read.csv("britishData.csv")$wgt - britWgt
priorData <- append(japData, britData)
#Load NZ data
nzData <- read.csv("nzData.csv")$wgt - nzWgt
kable(data.frame(Weight=c(japData, britData, nzData),
Country=c(rep("Japan", length(japData)),
rep("Britain", length(britData)),
rep("New Zealand", length(nzData))
)
),
"html"
) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = FALSE)
plotAreaInROPE(rnorm(10000,0,5),
compVal=-20,
maxROPEradius = 10
)
plotAreaInROPE(rnorm(10000,0,5),
compVal=-20,
maxROPEradius = 10
)
plotAreaInROPE(rnorm(10000,0,5),
compVal=-20,
maxROPEradius = 10
)
plotAreaInROPE(rnorm(10000,0,5),
compVal=-20,
maxROPEradius = 10
)
plotAreaInROPE(rnorm(10000,0,5),
compVal=-20,
maxROPEradius = 10
)
plotAreaInROPE(rnorm(10000,0,5),
compVal=-20,
maxROPEradius = 10
)
?rnorm
pnorm(100, 120, 5)
library(knitr)
library(kableExtra)
knitr::opts_chunk$set(echo = TRUE)
#Load NZ data
nzData <- read.csv("nzData.csv")$wgt
kable(nzData,
"html"
) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = FALSE)
library(knitr)
library(BEST)
library(kableExtra)
opts_chunk$set(echo = TRUE)
opts_knit$set(global.par = TRUE)
postPriorOverlap(nzModel.japPrior$mu, dnorm, mean=0, sd=5)
library(knitr)
library(BEST)
library(kableExtra)
opts_chunk$set(echo = TRUE)
opts_knit$set(global.par = TRUE)
#Set plot parameters
par(bg = '#ecf0f1')
#Set expected serving weights so we can standardize to zero
japWgt <- 170
britWgt <- 150
nzWgt <- 120
#Load Japanese data and British datum subtracting weight
japData <- read.csv("japaneseData.csv")$wgt - japWgt
britData <- read.csv("britishData.csv")$wgt - britWgt
#Merge Japanese and Bitish data
priorData <- append(japData, britData)
#Load NZ data
nzData <- read.csv("nzData.csv")$wgt - nzWgt
kable(dplyr::sample_frac(data.frame(Weight=c(japData, britData, nzData),
Country=c(rep("Japan", length(japData)),
rep("Britain", length(britData)),
rep("New Zealand", length(nzData))
)
),
0.6),
"html"
) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = FALSE)
plotAreaInROPE(rnorm(10000,0,5),
compVal=-20,
maxROPEradius = 10
)
#Prior with low certainty, i.e. high muSD and sigmaSD
priorModel.vague <- BESTmcmc(priorData,
prior = list(muM=0,
muSD=100,
sigmaMode=5,
sigmaSD=100)
)
#Prior with loose assumption that mu is near 0 and sigma near 5
priorModel.prior <- BESTmcmc(priorData,
prior = list(muM=0,
muSD=5,
sigmaMode=5,
sigmaSD=5)
)
kable(rbind(summary(priorModel.vague)[1:2,c(1, 5:6)],
summary(priorModel.prior)[1:2,c(1, 5:6)]),
"html") %>%
kable_styling(bootstrap_options = c("striped", "hover"), full_width = FALSE) %>%
group_rows("Vague prior", 1, 2) %>%
group_rows("Informed prior", 3, 4)
plot(priorModel.prior)
postPriorOverlap(priorModel.prior$mu, dnorm, mean=0, sd=5)
#Prior with low certainty
nzModel.vague <- BESTmcmc(nzData,
prior = list(muM=0,
muSD=100,
sigmaMode=5,
sigmaSD=100))
#Prior with our assumed distribution
nzModel.prior <- BESTmcmc(nzData,
prior = list(muM=0,
muSD=5,
sigmaMode=5,
sigmaSD=5))
#Prior using posterior from previous data. Uncertainty increased to account for hypothesised bias
nzModel.japPrior <- BESTmcmc(nzData, prior = list(muM=mean(priorModel.prior$mu),
muSD=sd(priorModel.prior$mu)*10,
sigmaMode=summary(priorModel.prior)[2,3],
sigmaSD=sd(priorModel.prior$sigma*2)))
kable(rbind(summary(nzModel.vague)[1:2,c(1, 5:6)],
summary(nzModel.prior)[1:2,c(1, 5:6)],
summary(nzModel.japPrior)[1:2,c(1, 5:6)]),
"html") %>%
kable_styling(bootstrap_options = c("striped", "hover"), full_width = FALSE) %>%
group_rows("Vague prior", 1, 2) %>%
group_rows("Informed prior", 3, 4) %>%
group_rows("Data informed prior (DI prior)", 5, 6)
postPriorOverlap(nzModel.japPrior$mu, dnorm, mean=0, sd=5)
plot(nzModel.japPrior, which = "sd", compVal = 5)
plot(nzModel.japPrior
)
plot(nzModel.japPrior)
nzModel.japPrior$mu
nzModel.japPrior$mu+100
plot(nzModel.japPrior$mu+100)
nzModel.japPrior$mu <- nzModel.japPrior$mu+100
plot(nzModel.japPrior)
plot(nzModel.japPrior, compVal = 120)
#Prior with low certainty
nzModel.vague <- BESTmcmc(nzData,
prior = list(muM=0,
muSD=100,
sigmaMode=5,
sigmaSD=100))
#Prior with our assumed distribution
nzModel.prior <- BESTmcmc(nzData,
prior = list(muM=0,
muSD=5,
sigmaMode=5,
sigmaSD=5))
#Prior using posterior from previous data. Uncertainty increased to account for hypothesised bias
nzModel.japPrior <- BESTmcmc(nzData, prior = list(muM=mean(priorModel.prior$mu),
muSD=sd(priorModel.prior$mu)*10,
sigmaMode=summary(priorModel.prior)[2,3],
sigmaSD=sd(priorModel.prior$sigma*2)))
nzModel.japPrior$mu <- nzModel.japPrior$mu+120
plot(nzModel.japPrior)
plot(nzModel.japPrior, compVal = 120)
title(main="Representative distribution of large fry weight")
plot(nzModel.japPrior, title(main=Blah))
plot(nzModel.japPrior, title(main="Blah"))
?plot.BEST
plot(nzModel.japPrior, compVal = 120, showCurve=TRUE)
par(bg = '#ecf0f1')
plot(nzModel.japPrior, compVal = 120, showCurve=TRUE)
plot(nzModel.japPrior, compVal = 120, showCurve=TRUE, main="Bla")
plot(nzModel.japPrior, compVal = 120, showCurve=TRUE, main="Distribution of large fry weight")
plot(nzModel.japPrior, compVal = 120, showCurve=TRUE, main="Distribution for the weight of large fries")
337/100
3.37*18
(398-337)/3.37

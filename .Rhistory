par(bg="blue")
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
library(BEST)
library(kableExtra)
par(bg="blue")
#Set expected weights so we can standardize to zero
japWgt <- 170
britWgt <- 150
nzWgt <- 120
#Load Japanese data and British datum subtracting weight so expected mean is 0
japData <- read.csv("japaneseData.csv")$wgt - japWgt
britData <- read.csv("britishData.csv")$wgt - britWgt
priorData <- append(japData, britData)
#Load NZ data
nzData <- read.csv("nzData.csv")$wgt - nzWgt
kable(data.frame(Weight=c(japData, britData, nzData),
Country=c(rep("Japan", length(japData)),
rep("Britain", length(britData)),
rep("New Zealand", length(nzData))
)
),
"html"
) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = FALSE)
plotAreaInROPE(rnorm(10000,0,5),
compVal=-20,
maxROPEradius = 10)
?plotAreaInROPE
plotAreaInROPE(rnorm(10000,0,5),
compVal=-20,
maxROPEradius = 10,
par(bg = 'blue'))
par(bg = 'blue')
plotAreaInROPE(rnorm(10000,0,5),
compVal=-20,
maxROPEradius = 10
)
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
library(BEST)
library(kableExtra)
#backgroundColor <-
par(bg = '#ecf0f1')
plotAreaInROPE(rnorm(10000,0,5),
compVal=-20,
maxROPEradius = 10
)
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
library(BEST)
library(kableExtra)
backgroundColor <- "#ecf0f1"
plotAreaInROPE(rnorm(10000,0,5),
compVal=-20,
maxROPEradius = 10
)
library(knitr)
library(BEST)
library(kableExtra)
opts_chunk$set(echo = TRUE)
opts_knit$set(global.par = TRUE)
par(bg = '#ecf0f1')
#Set expected weights so we can standardize to zero
japWgt <- 170
britWgt <- 150
nzWgt <- 120
#Load Japanese data and British datum subtracting weight so expected mean is 0
japData <- read.csv("japaneseData.csv")$wgt - japWgt
britData <- read.csv("britishData.csv")$wgt - britWgt
priorData <- append(japData, britData)
#Load NZ data
nzData <- read.csv("nzData.csv")$wgt - nzWgt
kable(data.frame(Weight=c(japData, britData, nzData),
Country=c(rep("Japan", length(japData)),
rep("Britain", length(britData)),
rep("New Zealand", length(nzData))
)
),
"html"
) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = FALSE)
plotAreaInROPE(rnorm(10000,0,5),
compVal=-20,
maxROPEradius = 10
)
library(knitr)
library(BEST)
library(kableExtra)
opts_chunk$set(echo = TRUE)
opts_knit$set(global.par = TRUE)
#Set expected weights so we can standardize to zero
japWgt <- 170
britWgt <- 150
nzWgt <- 120
#Load Japanese data and British datum subtracting weight so expected mean is 0
japData <- read.csv("japaneseData.csv")$wgt - japWgt
britData <- read.csv("britishData.csv")$wgt - britWgt
priorData <- append(japData, britData)
#Load NZ data
nzData <- read.csv("nzData.csv")$wgt - nzWgt
par(bg = '#ecf0f1')
plotAreaInROPE(rnorm(10000,0,5),
compVal=-20,
maxROPEradius = 10
)
plotAreaInROPE(rnorm(10000,0,5),
compVal=-20,
maxROPEradius = 10
)
plotAreaInROPE(rnorm(10000,0,5),
compVal=-20,
maxROPEradius = 10
)
help("par")
library(knitr)
library(BEST)
library(kableExtra)
opts_chunk$set(echo = TRUE)
opts_knit$set(global.par = TRUE)
#Set plot parameters
par(bg = '#ecf0f1')
#Set expected weights so we can standardize to zero
japWgt <- 170
britWgt <- 150
nzWgt <- 120
#Load Japanese data and British datum subtracting weight so expected mean is 0
japData <- read.csv("japaneseData.csv")$wgt - japWgt
britData <- read.csv("britishData.csv")$wgt - britWgt
priorData <- append(japData, britData)
#Load NZ data
nzData <- read.csv("nzData.csv")$wgt - nzWgt
kable(data.frame(Weight=c(japData, britData, nzData),
Country=c(rep("Japan", length(japData)),
rep("Britain", length(britData)),
rep("New Zealand", length(nzData))
)
),
"html"
) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = FALSE)
plotAreaInROPE(rnorm(10000,0,5),
compVal=-20,
maxROPEradius = 10
)
plotAreaInROPE(rnorm(10000,0,5),
compVal=-20,
maxROPEradius = 10
)
plotAreaInROPE(rnorm(10000,0,5),
compVal=-20,
maxROPEradius = 10
)
plotAreaInROPE(rnorm(10000,0,5),
compVal=-20,
maxROPEradius = 10
)
plotAreaInROPE(rnorm(10000,0,5),
compVal=-20,
maxROPEradius = 10
)
plotAreaInROPE(rnorm(10000,0,5),
compVal=-20,
maxROPEradius = 10
)
